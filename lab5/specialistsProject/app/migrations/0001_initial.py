# Generated by Django 4.2.5 on 2023-12-04 08:58

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='Логин')),
                ('full_name', models.CharField(max_length=150, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь модератором?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('CREATED', 'Создана'), ('IN_WORK', 'В работе'), ('CANCELED', 'Отменена'), ('FINISHED', 'Завершена'), ('DELETED', 'Удалена')], default='CREATED', max_length=8, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('formed_at', models.DateTimeField(blank=True, null=True, verbose_name='Сформировано')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Завершено')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderator', to=settings.AUTH_USER_MODEL, verbose_name='Модератор')),
            ],
            options={
                'verbose_name': 'заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Имя')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='specialist_preview_img', verbose_name='Изображение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequestSpecialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.servicerequest', verbose_name='Заявка')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.specialist', verbose_name='Специалист')),
            ],
            options={
                'verbose_name': 'Связь специалист - заявка',
                'verbose_name_plural': 'Связи специалист - заявка',
            },
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='specialist',
            field=models.ManyToManyField(related_name='requests', through='app.ServiceRequestSpecialist', to='app.specialist', verbose_name='Специалисты'),
        ),
    ]
